# This workflow will do a clean install of node Dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Publish Tagged Release

on:
  push:
    tags:
      - "v*"

jobs:

  build-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install Dependencies
      run: npm install
    - name: Install Flatpak Build Tools and Electron Base
      run: |
        sudo apt-get install flatpak flatpak-builder elfutils
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install -y flathub io.atom.electron.BaseApp//stable
    - name: Create Distributable
      run: npm run make
    - name: Upload .deb Artifact
      uses: actions/upload-artifact@master
      with:
        name: deb
        path: ./out/make/deb/x64/*.deb
    - name: Upload .rpm Artifact
      uses: actions/upload-artifact@master
      with:
        name: rpm
        path: ./out/make/rpm/x64/*.rpm
    - name: Upload .flatpak Artifact
      uses: actions/upload-artifact@master
      with:
        name: flatpak
        path: ./out/make/flatpak/x64/*.flatpak

  build-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install Dependencies
      run: npm install
    - name: Create Distributable
      run: npm run make
    - name: Upload Artifacts
      uses: actions/upload-artifact@master
      with:
        name: mac
        path: ./out/make/*.dmg

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install Dependencies
      run: npm install
    - name: Create Distributable
      run: npm run make
    - name: Upload Artifacts
      uses: actions/upload-artifact@master
      with:
        name: win
        path: ./out/make/squirrel.windows/x64/*.exe

  publish-tagged-release:

    needs: [build-ubuntu, build-mac, build-windows]

    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Display structure of downloaded files
        run: ls -R
      - name: Publish Tagged Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ./deb/*.deb
            ./rpm/*.rpm
            ./mac/*.dmg
            ./win/*.exe
            ./flatpak/*.flatpak
